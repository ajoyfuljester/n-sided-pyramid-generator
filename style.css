* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    /* Customization */

    --side-background: linear-gradient(0deg, #46f 30%, #13a 200%);
    --base-background: radial-gradient(at 50% 0%, #13a, #46f);

    --side-height: 60;
    
    --side-width: 20;
    
    --unit: 1vmin;
    
    /* Number of sides; Always overwritten by script.js */
    --n: 6;

    /* END OF Customization */
    


    /* Calcultions */
    
    --side-width-in-unit: calc(var(--side-width) * var(--unit));
    --side-height-in-unit: calc(var(--side-height) * var(--unit));
    
    --central-angle: calc(360deg / var(--n));
    --triangle-angle: calc((180deg - var(--central-angle)) / 2);
    
    --base-height: calc(var(--side-width) * tan(var(--triangle-angle)) / 2);
    --base-height-in-unit: calc(var(--base-height) * var(--unit));
    
    --shape-angle: calc(acos(var(--base-height) / var(--side-height)));
    --shape-height: calc(var(--side-height) * sin(var(--shape-angle)));
    --shape-height-in-unit: calc(var(--shape-height) * var(--unit));
    
    /* END OF Calculations */
}

body {
    min-height: 100vh;
    display: grid;
    place-items: center;

    background-image: radial-gradient(#89f 50%, #13a 200%);
}

.shape {
    display: grid;
    place-items: center;

    transform-style: preserve-3d;
    transform: rotateX(100deg) rotateY(10deg);

    animation: spin 3s linear infinite;
}

.base, .side {
    grid-area: 1 / 1;
    
    background: var(--local-background);
    clip-path: polygon(0% 100%, 50% 0%, 100% 100%);
    
    width: var(--side-width-in-unit);
    height: var(--local-height);
    
    rotate: z calc(var(--central-angle) * var(--index));
    transform-origin: 50% 0%;
}

.base {
    --local-height: var(--base-height-in-unit);
    translate: 0 calc(var(--local-height) / 2) calc(var(--shape-height-in-unit) / -2);
    
    --local-background: var(--base-background);
    /* display: none; */
}

.side {
    --local-height: var(--side-height-in-unit);
    translate: 0 calc(var(--local-height) / 2) calc(var(--shape-height-in-unit) / 2);

    transform: rotateX(calc(var(--shape-angle) * -1));

    --local-background: var(--side-background);
}

:is(.side, .base):nth-of-type(2n) {
    filter: brightness(.9);
}

@keyframes spin {
    0% {
        rotate: .3 .81 .4 0deg;
        /* rotate: x 0deg; */
    }

    100% {
        rotate: .3 3 .4 360deg;
        /* rotate: x -300deg; */
    }
}